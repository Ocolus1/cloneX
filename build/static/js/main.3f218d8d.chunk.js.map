{"version":3,"sources":["candy-machine.ts","connection.tsx","Home.tsx","App.tsx","reportWebVitals.ts","index.tsx","utils.ts"],"names":["CANDY_MACHINE_PROGRAM","anchor","PublicKey","TOKEN_METADATA_PROGRAM_ID","awaitTransactionSignatureConfirmation","txid","timeout","connection","a","queryStatus","done","status","slot","confirmations","err","subId","Promise","resolve","reject","setTimeout","console","log","getSignatureStatuses","signatureStatuses","value","sleep","_signatureSubscriptions","removeSignatureListener","createAssociatedTokenAccountInstruction","associatedTokenAddress","payer","walletAddress","splTokenMintAddress","keys","pubkey","isSigner","isWritable","SystemProgram","programId","TOKEN_PROGRAM_ID","SYSVAR_RENT_PUBKEY","TransactionInstruction","SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID","data","Buffer","from","getCandyMachineState","anchorWallet","candyMachineId","provider","preflightCommitment","fetchIdl","idl","program","account","candyMachine","fetch","state","itemsAvailable","toNumber","itemsRedeemed","itemsRemaining","presale","whitelistMintSettings","goLiveDate","Date","getTime","id","isSoldOut","isActive","endSettings","endSettingType","date","number","isPresale","treasury","wallet","tokenMint","gatekeeper","hiddenSettings","price","getMasterEdition","mint","findProgramAddress","toBuffer","getMetadata","getCandyMachineCreator","mintOneToken","Keypair","generate","getAtaForMint","publicKey","userTokenAccountAddress","userPayingAccountAddress","candyMachineAddress","remainingAccounts","signers","cleanupInstructions","MintLayout","span","getMinimumBalanceForRentExemption","fromPubkey","newAccountPubkey","space","lamports","createAccount","Token","createInitMintInstruction","createMintToInstruction","instructions","getNetworkToken","gatekeeperNetwork","push","expireOnUse","CIVIC","getNetworkExpire","whitelistToken","mode","burnEveryTime","whitelistBurnAuthority","getAccountInfo","createApproveInstruction","createRevokeInstruction","transferAuthority","metadataAddress","masterEdition","candyMachineCreator","creatorBump","instruction","mintNft","accounts","metadata","mintAuthority","updateAuthority","tokenMetadataProgram","tokenProgram","systemProgram","rent","clock","SYSVAR_CLOCK_PUBKEY","recentBlockhashes","SYSVAR_RECENT_BLOCKHASHES_PUBKEY","instructionSysvarAccount","SYSVAR_INSTRUCTIONS_PUBKEY","length","undefined","sendTransactions","txs","map","t","ms","SequenceType","instructionSet","signersSet","sequenceType","Parallel","commitment","successCallback","ind","failCallback","block","WalletNotConnectedError","unsignedTxns","getRecentBlockhash","i","transaction","Transaction","forEach","add","recentBlockhash","blockhash","setSigners","s","partialSign","signAllTransactions","signedTxns","pendingTxns","breakEarlyObject","breakEarly","signedTxnPromise","sendSignedTransaction","signedTransaction","then","catch","reason","StopOnFailure","all","getUnixTs","DEFAULT_TIMEOUT","rawTransaction","serialize","startTime","sendRawTransaction","skipPreflight","confirmation","Error","error","simulateResult","simulateTransaction","logs","line","startsWith","slice","JSON","stringify","_recentBlockhash","_disableBlockhashCaching","signData","serializeMessage","wireTransaction","_serialize","encodedTransaction","toString","args","encoding","_rpcRequest","res","message","result","onSignature","context","e","Home","styled","WalletDialogButton","div","props","useState","setCandyMachine","open","severity","rpcHost","useWallet","useMemo","signTransaction","refreshCandyMachineState","useCallback","cndy","useEffect","MainDiv","RedDiv","HeaderDiv","HeadImg","HeadImg2","ImageDiv","Img","img","Slide","Slider","SlideTrack","SlideTracker","WhiteDiv","WhiteDivText","p","WhiteDivBoxWrapper","WhiteDivBox","WhiteDivBoxText","WhiteDivBoxButton","button","WhiteDivBoxIconsWrapper","WhiteDivBoxIcons","WhiteDivBoxIconsLink","RoadmapDiv","RoadmapDivText","RoadmapOutDiv","RoadmapInDiv","RoadmapInTextL","RoadmapInTextR","BrandDiv","BrandDivIn","BrandDivInTwo","BrandDivInTwo2","ProgressDiv","ProgressBar","ProgressBarIn","ProgressStakeBtn","ProgressStakeBtnRev","ProgImage","PImg","PDiv","ProgText","ProgTextP","ProgTextBtn","ProgTextLg","LastBigWrapper","LastP","LastWrapper","LastDiv","LastImg","Lasth6","h6","LastImgText","connected","src","alt","className","style","paddingBottom","href","target","rel","color","theme","createTheme","palette","type","process","getCandyMachineId","network","Connection","startDateSeed","parseInt","REACT_APP_CANDY_START_DATE","App","endpoint","clusterApiUrl","wallets","getPhantomWallet","getSolflareWallet","getSlopeWallet","getSolletWallet","getSolletExtensionWallet","ThemeProvider","ConnectionProvider","WalletProvider","autoConnect","startDate","txTimeout","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","buyer"],"mappings":"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","file":"static/js/main.3f218d8d.chunk.js","sourcesContent":["import * as anchor from '@project-serum/anchor';\r\n\r\nimport { MintLayout, TOKEN_PROGRAM_ID, Token } from '@solana/spl-token';\r\nimport { SystemProgram } from '@solana/web3.js';\r\nimport { sendTransactions } from './connection';\r\n\r\nimport {\r\n  CIVIC,\r\n  getAtaForMint,\r\n  getNetworkExpire,\r\n  getNetworkToken,\r\n  SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID,\r\n} from './utils';\r\n\r\nexport const CANDY_MACHINE_PROGRAM = new anchor.web3.PublicKey(\r\n  'cndy3Z4yapfJBmL3ShUp5exZKqR3z33thTzeNMm2gRZ',\r\n);\r\n\r\nconst TOKEN_METADATA_PROGRAM_ID = new anchor.web3.PublicKey(\r\n  'metaqbxxUerdq28cj1RbAWkYQm3ybzjb6a8bt518x1s',\r\n);\r\n\r\ninterface CandyMachineState {\r\n  itemsAvailable: number;\r\n  itemsRedeemed: number;\r\n  itemsRemaining: number;\r\n  treasury: anchor.web3.PublicKey;\r\n  tokenMint: anchor.web3.PublicKey;\r\n  isSoldOut: boolean;\r\n  isActive: boolean;\r\n  isPresale: boolean;\r\n  goLiveDate: anchor.BN;\r\n  price: anchor.BN;\r\n  gatekeeper: null | {\r\n    expireOnUse: boolean;\r\n    gatekeeperNetwork: anchor.web3.PublicKey;\r\n  };\r\n  endSettings: null | [number, anchor.BN];\r\n  whitelistMintSettings: null | {\r\n    mode: any;\r\n    mint: anchor.web3.PublicKey;\r\n    presale: boolean;\r\n    discountPrice: null | anchor.BN;\r\n  };\r\n  hiddenSettings: null | {\r\n    name: string;\r\n    uri: string;\r\n    hash: Uint8Array;\r\n  };\r\n}\r\n\r\nexport interface CandyMachineAccount {\r\n  id: anchor.web3.PublicKey;\r\n  program: anchor.Program;\r\n  state: CandyMachineState;\r\n}\r\n\r\nexport const awaitTransactionSignatureConfirmation = async (\r\n  txid: anchor.web3.TransactionSignature,\r\n  timeout: number,\r\n  connection: anchor.web3.Connection,\r\n  queryStatus = false,\r\n): Promise<anchor.web3.SignatureStatus | null | void> => {\r\n  let done = false;\r\n  let status: anchor.web3.SignatureStatus | null | void = {\r\n    slot: 0,\r\n    confirmations: 0,\r\n    err: null,\r\n  };\r\n  let subId = 0;\r\n  status = await new Promise(async (resolve, reject) => {\r\n    setTimeout(() => {\r\n      if (done) {\r\n        return;\r\n      }\r\n      done = true;\r\n      console.log('Rejecting for timeout...');\r\n      reject({ timeout: true });\r\n    }, timeout);\r\n\r\n    while (!done && queryStatus) {\r\n      // eslint-disable-next-line no-loop-func\r\n      (async () => {\r\n        try {\r\n          const signatureStatuses = await connection.getSignatureStatuses([\r\n            txid,\r\n          ]);\r\n          status = signatureStatuses && signatureStatuses.value[0];\r\n          if (!done) {\r\n            if (!status) {\r\n              console.log('REST null result for', txid, status);\r\n            } else if (status.err) {\r\n              console.log('REST error for', txid, status);\r\n              done = true;\r\n              reject(status.err);\r\n            } else if (!status.confirmations) {\r\n              console.log('REST no confirmations for', txid, status);\r\n            } else {\r\n              console.log('REST confirmation for', txid, status);\r\n              done = true;\r\n              resolve(status);\r\n            }\r\n          }\r\n        } catch (e) {\r\n          if (!done) {\r\n            console.log('REST connection error: txid', txid, e);\r\n          }\r\n        }\r\n      })();\r\n      await sleep(2000);\r\n    }\r\n  });\r\n\r\n  //@ts-ignore\r\n  if (connection._signatureSubscriptions[subId]) {\r\n    connection.removeSignatureListener(subId);\r\n  }\r\n  done = true;\r\n  console.log('Returning status', status);\r\n  return status;\r\n};\r\n\r\nconst createAssociatedTokenAccountInstruction = (\r\n  associatedTokenAddress: anchor.web3.PublicKey,\r\n  payer: anchor.web3.PublicKey,\r\n  walletAddress: anchor.web3.PublicKey,\r\n  splTokenMintAddress: anchor.web3.PublicKey,\r\n) => {\r\n  const keys = [\r\n    { pubkey: payer, isSigner: true, isWritable: true },\r\n    { pubkey: associatedTokenAddress, isSigner: false, isWritable: true },\r\n    { pubkey: walletAddress, isSigner: false, isWritable: false },\r\n    { pubkey: splTokenMintAddress, isSigner: false, isWritable: false },\r\n    {\r\n      pubkey: anchor.web3.SystemProgram.programId,\r\n      isSigner: false,\r\n      isWritable: false,\r\n    },\r\n    { pubkey: TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\r\n    {\r\n      pubkey: anchor.web3.SYSVAR_RENT_PUBKEY,\r\n      isSigner: false,\r\n      isWritable: false,\r\n    },\r\n  ];\r\n  return new anchor.web3.TransactionInstruction({\r\n    keys,\r\n    programId: SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID,\r\n    data: Buffer.from([]),\r\n  });\r\n};\r\n\r\nexport const getCandyMachineState = async (\r\n  anchorWallet: anchor.Wallet,\r\n  candyMachineId: anchor.web3.PublicKey,\r\n  connection: anchor.web3.Connection,\r\n): Promise<CandyMachineAccount> => {\r\n  const provider = new anchor.Provider(connection, anchorWallet, {\r\n    preflightCommitment: 'recent',\r\n  });\r\n\r\n  const idl = await anchor.Program.fetchIdl(CANDY_MACHINE_PROGRAM, provider);\r\n\r\n  const program = new anchor.Program(idl, CANDY_MACHINE_PROGRAM, provider);\r\n\r\n  const state: any = await program.account.candyMachine.fetch(candyMachineId);\r\n  const itemsAvailable = state.data.itemsAvailable.toNumber();\r\n  const itemsRedeemed = state.itemsRedeemed.toNumber();\r\n  const itemsRemaining = itemsAvailable - itemsRedeemed;\r\n\r\n  const presale =\r\n    state.data.whitelistMintSettings &&\r\n    state.data.whitelistMintSettings.presale &&\r\n    (!state.data.goLiveDate ||\r\n      state.data.goLiveDate.toNumber() > new Date().getTime() / 1000);\r\n\r\n  return {\r\n    id: candyMachineId,\r\n    program,\r\n    state: {\r\n      itemsAvailable,\r\n      itemsRedeemed,\r\n      itemsRemaining,\r\n      isSoldOut: itemsRemaining === 0,\r\n      isActive:\r\n        (presale ||\r\n          state.data.goLiveDate.toNumber() < new Date().getTime() / 1000) &&\r\n        (state.endSettings\r\n          ? state.endSettings.endSettingType.date\r\n            ? state.endSettings.number.toNumber() > new Date().getTime() / 1000\r\n            : itemsRedeemed < state.endSettings.number.toNumber()\r\n          : true),\r\n      isPresale: presale,\r\n      goLiveDate: state.data.goLiveDate,\r\n      treasury: state.wallet,\r\n      tokenMint: state.tokenMint,\r\n      gatekeeper: state.data.gatekeeper,\r\n      endSettings: state.data.endSettings,\r\n      whitelistMintSettings: state.data.whitelistMintSettings,\r\n      hiddenSettings: state.data.hiddenSettings,\r\n      price: state.data.price,\r\n    },\r\n  };\r\n};\r\n\r\nconst getMasterEdition = async (\r\n  mint: anchor.web3.PublicKey,\r\n): Promise<anchor.web3.PublicKey> => {\r\n  return (\r\n    await anchor.web3.PublicKey.findProgramAddress(\r\n      [\r\n        Buffer.from('metadata'),\r\n        TOKEN_METADATA_PROGRAM_ID.toBuffer(),\r\n        mint.toBuffer(),\r\n        Buffer.from('edition'),\r\n      ],\r\n      TOKEN_METADATA_PROGRAM_ID,\r\n    )\r\n  )[0];\r\n};\r\n\r\nconst getMetadata = async (\r\n  mint: anchor.web3.PublicKey,\r\n): Promise<anchor.web3.PublicKey> => {\r\n  return (\r\n    await anchor.web3.PublicKey.findProgramAddress(\r\n      [\r\n        Buffer.from('metadata'),\r\n        TOKEN_METADATA_PROGRAM_ID.toBuffer(),\r\n        mint.toBuffer(),\r\n      ],\r\n      TOKEN_METADATA_PROGRAM_ID,\r\n    )\r\n  )[0];\r\n};\r\n\r\nexport const getCandyMachineCreator = async (\r\n  candyMachine: anchor.web3.PublicKey,\r\n): Promise<[anchor.web3.PublicKey, number]> => {\r\n  return await anchor.web3.PublicKey.findProgramAddress(\r\n    [Buffer.from('candy_machine'), candyMachine.toBuffer()],\r\n    CANDY_MACHINE_PROGRAM,\r\n  );\r\n};\r\n\r\nexport const mintOneToken = async (\r\n  candyMachine: CandyMachineAccount,\r\n  payer: anchor.web3.PublicKey,\r\n): Promise<(string | undefined)[]> => {\r\n  const mint = anchor.web3.Keypair.generate();\r\n\r\n  const userTokenAccountAddress = (\r\n    await getAtaForMint(mint.publicKey, payer)\r\n  )[0];\r\n\r\n  const userPayingAccountAddress = candyMachine.state.tokenMint\r\n    ? (await getAtaForMint(candyMachine.state.tokenMint, payer))[0]\r\n    : payer;\r\n\r\n  const candyMachineAddress = candyMachine.id;\r\n  const remainingAccounts = [];\r\n  const signers: anchor.web3.Keypair[] = [mint];\r\n  const cleanupInstructions = [];\r\n  const instructions = [\r\n    anchor.web3.SystemProgram.createAccount({\r\n      fromPubkey: payer,\r\n      newAccountPubkey: mint.publicKey,\r\n      space: MintLayout.span,\r\n      lamports:\r\n        await candyMachine.program.provider.connection.getMinimumBalanceForRentExemption(\r\n          MintLayout.span,\r\n        ),\r\n      programId: TOKEN_PROGRAM_ID,\r\n    }),\r\n    Token.createInitMintInstruction(\r\n      TOKEN_PROGRAM_ID,\r\n      mint.publicKey,\r\n      0,\r\n      payer,\r\n      payer,\r\n    ),\r\n    createAssociatedTokenAccountInstruction(\r\n      userTokenAccountAddress,\r\n      payer,\r\n      payer,\r\n      mint.publicKey,\r\n    ),\r\n    Token.createMintToInstruction(\r\n      TOKEN_PROGRAM_ID,\r\n      mint.publicKey,\r\n      userTokenAccountAddress,\r\n      payer,\r\n      [],\r\n      1,\r\n    ),\r\n  ];\r\n\r\n  if (candyMachine.state.gatekeeper) {\r\n    remainingAccounts.push({\r\n      pubkey: (\r\n        await getNetworkToken(\r\n          payer,\r\n          candyMachine.state.gatekeeper.gatekeeperNetwork,\r\n        )\r\n      )[0],\r\n      isWritable: true,\r\n      isSigner: false,\r\n    });\r\n    if (candyMachine.state.gatekeeper.expireOnUse) {\r\n      remainingAccounts.push({\r\n        pubkey: CIVIC,\r\n        isWritable: false,\r\n        isSigner: false,\r\n      });\r\n      remainingAccounts.push({\r\n        pubkey: (\r\n          await getNetworkExpire(\r\n            candyMachine.state.gatekeeper.gatekeeperNetwork,\r\n          )\r\n        )[0],\r\n        isWritable: false,\r\n        isSigner: false,\r\n      });\r\n    }\r\n  }\r\n  if (candyMachine.state.whitelistMintSettings) {\r\n    const mint = new anchor.web3.PublicKey(\r\n      candyMachine.state.whitelistMintSettings.mint,\r\n    );\r\n\r\n    const whitelistToken = (await getAtaForMint(mint, payer))[0];\r\n    remainingAccounts.push({\r\n      pubkey: whitelistToken,\r\n      isWritable: true,\r\n      isSigner: false,\r\n    });\r\n\r\n    if (candyMachine.state.whitelistMintSettings.mode.burnEveryTime) {\r\n      const whitelistBurnAuthority = anchor.web3.Keypair.generate();\r\n\r\n      remainingAccounts.push({\r\n        pubkey: mint,\r\n        isWritable: true,\r\n        isSigner: false,\r\n      });\r\n      remainingAccounts.push({\r\n        pubkey: whitelistBurnAuthority.publicKey,\r\n        isWritable: false,\r\n        isSigner: true,\r\n      });\r\n      signers.push(whitelistBurnAuthority);\r\n      const exists =\r\n        await candyMachine.program.provider.connection.getAccountInfo(\r\n          whitelistToken,\r\n        );\r\n      if (exists) {\r\n        instructions.push(\r\n          Token.createApproveInstruction(\r\n            TOKEN_PROGRAM_ID,\r\n            whitelistToken,\r\n            whitelistBurnAuthority.publicKey,\r\n            payer,\r\n            [],\r\n            1,\r\n          ),\r\n        );\r\n        cleanupInstructions.push(\r\n          Token.createRevokeInstruction(\r\n            TOKEN_PROGRAM_ID,\r\n            whitelistToken,\r\n            payer,\r\n            [],\r\n          ),\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  if (candyMachine.state.tokenMint) {\r\n    const transferAuthority = anchor.web3.Keypair.generate();\r\n\r\n    signers.push(transferAuthority);\r\n    remainingAccounts.push({\r\n      pubkey: userPayingAccountAddress,\r\n      isWritable: true,\r\n      isSigner: false,\r\n    });\r\n    remainingAccounts.push({\r\n      pubkey: transferAuthority.publicKey,\r\n      isWritable: false,\r\n      isSigner: true,\r\n    });\r\n\r\n    instructions.push(\r\n      Token.createApproveInstruction(\r\n        TOKEN_PROGRAM_ID,\r\n        userPayingAccountAddress,\r\n        transferAuthority.publicKey,\r\n        payer,\r\n        [],\r\n        candyMachine.state.price.toNumber(),\r\n      ),\r\n    );\r\n    cleanupInstructions.push(\r\n      Token.createRevokeInstruction(\r\n        TOKEN_PROGRAM_ID,\r\n        userPayingAccountAddress,\r\n        payer,\r\n        [],\r\n      ),\r\n    );\r\n  }\r\n  const metadataAddress = await getMetadata(mint.publicKey);\r\n  const masterEdition = await getMasterEdition(mint.publicKey);\r\n\r\n  const [candyMachineCreator, creatorBump] = await getCandyMachineCreator(\r\n    candyMachineAddress,\r\n  );\r\n\r\n  instructions.push(\r\n    await candyMachine.program.instruction.mintNft(creatorBump, {\r\n      accounts: {\r\n        candyMachine: candyMachineAddress,\r\n        candyMachineCreator,\r\n        payer: payer,\r\n        wallet: candyMachine.state.treasury,\r\n        mint: mint.publicKey,\r\n        metadata: metadataAddress,\r\n        masterEdition,\r\n        mintAuthority: payer,\r\n        updateAuthority: payer,\r\n        tokenMetadataProgram: TOKEN_METADATA_PROGRAM_ID,\r\n        tokenProgram: TOKEN_PROGRAM_ID,\r\n        systemProgram: SystemProgram.programId,\r\n        rent: anchor.web3.SYSVAR_RENT_PUBKEY,\r\n        clock: anchor.web3.SYSVAR_CLOCK_PUBKEY,\r\n        recentBlockhashes: anchor.web3.SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\r\n        instructionSysvarAccount: anchor.web3.SYSVAR_INSTRUCTIONS_PUBKEY,\r\n      },\r\n      remainingAccounts:\r\n        remainingAccounts.length > 0 ? remainingAccounts : undefined,\r\n    }),\r\n  );\r\n\r\n  try {\r\n    return (\r\n      await sendTransactions(\r\n        candyMachine.program.provider.connection,\r\n        candyMachine.program.provider.wallet,\r\n        [instructions, cleanupInstructions],\r\n        [signers, []],\r\n      )\r\n    ).txs.map(t => t.txid);\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n\r\n  return [];\r\n};\r\n\r\nexport const shortenAddress = (address: string, chars = 4): string => {\r\n  return `${address.slice(0, chars)}...${address.slice(-chars)}`;\r\n};\r\n\r\nconst sleep = (ms: number): Promise<void> => {\r\n  return new Promise(resolve => setTimeout(resolve, ms));\r\n};\r\n","import {\r\n  Keypair,\r\n  Commitment,\r\n  Connection,\r\n  RpcResponseAndContext,\r\n  SignatureStatus,\r\n  SimulatedTransactionResponse,\r\n  Transaction,\r\n  TransactionInstruction,\r\n  TransactionSignature,\r\n  Blockhash,\r\n  FeeCalculator,\r\n} from '@solana/web3.js';\r\n\r\nimport { WalletNotConnectedError } from '@solana/wallet-adapter-base';\r\n\r\ninterface BlockhashAndFeeCalculator {\r\n  blockhash: Blockhash;\r\n  feeCalculator: FeeCalculator;\r\n}\r\n\r\nexport const getErrorForTransaction = async (\r\n  connection: Connection,\r\n  txid: string,\r\n) => {\r\n  // wait for all confirmation before geting transaction\r\n  await connection.confirmTransaction(txid, 'max');\r\n\r\n  const tx = await connection.getParsedConfirmedTransaction(txid);\r\n\r\n  const errors: string[] = [];\r\n  if (tx?.meta && tx.meta.logMessages) {\r\n    tx.meta.logMessages.forEach(log => {\r\n      const regex = /Error: (.*)/gm;\r\n      let m;\r\n      while ((m = regex.exec(log)) !== null) {\r\n        // This is necessary to avoid infinite loops with zero-width matches\r\n        if (m.index === regex.lastIndex) {\r\n          regex.lastIndex++;\r\n        }\r\n\r\n        if (m.length > 1) {\r\n          errors.push(m[1]);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  return errors;\r\n};\r\n\r\nexport enum SequenceType {\r\n  Sequential,\r\n  Parallel,\r\n  StopOnFailure,\r\n}\r\n\r\nexport async function sendTransactionsWithManualRetry(\r\n  connection: Connection,\r\n  wallet: any,\r\n  instructions: TransactionInstruction[][],\r\n  signers: Keypair[][],\r\n): Promise<(string | undefined)[]> {\r\n  let stopPoint = 0;\r\n  let tries = 0;\r\n  let lastInstructionsLength = null;\r\n  let toRemoveSigners: Record<number, boolean> = {};\r\n  instructions = instructions.filter((instr, i) => {\r\n    if (instr.length > 0) {\r\n      return true;\r\n    } else {\r\n      toRemoveSigners[i] = true;\r\n      return false;\r\n    }\r\n  });\r\n  let ids: string[] = [];\r\n  let filteredSigners = signers.filter((_, i) => !toRemoveSigners[i]);\r\n\r\n  while (stopPoint < instructions.length && tries < 3) {\r\n    instructions = instructions.slice(stopPoint, instructions.length);\r\n    filteredSigners = filteredSigners.slice(stopPoint, filteredSigners.length);\r\n\r\n    if (instructions.length === lastInstructionsLength) tries = tries + 1;\r\n    else tries = 0;\r\n\r\n    try {\r\n      if (instructions.length === 1) {\r\n        const id = await sendTransactionWithRetry(\r\n          connection,\r\n          wallet,\r\n          instructions[0],\r\n          filteredSigners[0],\r\n          'single',\r\n        );\r\n        ids.push(id.txid);\r\n        stopPoint = 1;\r\n      } else {\r\n        const { txs } = await sendTransactions(\r\n          connection,\r\n          wallet,\r\n          instructions,\r\n          filteredSigners,\r\n          SequenceType.StopOnFailure,\r\n          'single',\r\n        );\r\n        ids = ids.concat(txs.map(t => t.txid));\r\n      }\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n    console.log(\r\n      'Died on ',\r\n      stopPoint,\r\n      'retrying from instruction',\r\n      instructions[stopPoint],\r\n      'instructions length is',\r\n      instructions.length,\r\n    );\r\n    lastInstructionsLength = instructions.length;\r\n  }\r\n\r\n  return ids;\r\n}\r\n\r\nexport const sendTransactions = async (\r\n  connection: Connection,\r\n  wallet: any,\r\n  instructionSet: TransactionInstruction[][],\r\n  signersSet: Keypair[][],\r\n  sequenceType: SequenceType = SequenceType.Parallel,\r\n  commitment: Commitment = 'singleGossip',\r\n  successCallback: (txid: string, ind: number) => void = (txid, ind) => {},\r\n  failCallback: (reason: string, ind: number) => boolean = (txid, ind) => false,\r\n  block?: BlockhashAndFeeCalculator,\r\n): Promise<{ number: number; txs: { txid: string; slot: number }[] }> => {\r\n  if (!wallet.publicKey) throw new WalletNotConnectedError();\r\n\r\n  const unsignedTxns: Transaction[] = [];\r\n\r\n  if (!block) {\r\n    block = await connection.getRecentBlockhash(commitment);\r\n  }\r\n\r\n  for (let i = 0; i < instructionSet.length; i++) {\r\n    const instructions = instructionSet[i];\r\n    const signers = signersSet[i];\r\n\r\n    if (instructions.length === 0) {\r\n      continue;\r\n    }\r\n\r\n    let transaction = new Transaction();\r\n    instructions.forEach(instruction => transaction.add(instruction));\r\n    transaction.recentBlockhash = block.blockhash;\r\n    transaction.setSigners(\r\n      // fee payed by the wallet owner\r\n      wallet.publicKey,\r\n      ...signers.map(s => s.publicKey),\r\n    );\r\n\r\n    if (signers.length > 0) {\r\n      transaction.partialSign(...signers);\r\n    }\r\n\r\n    unsignedTxns.push(transaction);\r\n  }\r\n\r\n  const signedTxns = await wallet.signAllTransactions(unsignedTxns);\r\n\r\n  const pendingTxns: Promise<{ txid: string; slot: number }>[] = [];\r\n\r\n  let breakEarlyObject = { breakEarly: false, i: 0 };\r\n  console.log(\r\n    'Signed txns length',\r\n    signedTxns.length,\r\n    'vs handed in length',\r\n    instructionSet.length,\r\n  );\r\n  for (let i = 0; i < signedTxns.length; i++) {\r\n    const signedTxnPromise = sendSignedTransaction({\r\n      connection,\r\n      signedTransaction: signedTxns[i],\r\n    });\r\n\r\n    signedTxnPromise\r\n      .then(({ txid, slot }) => {\r\n        successCallback(txid, i);\r\n      })\r\n      .catch(reason => {\r\n        // @ts-ignore\r\n        failCallback(signedTxns[i], i);\r\n        if (sequenceType === SequenceType.StopOnFailure) {\r\n          breakEarlyObject.breakEarly = true;\r\n          breakEarlyObject.i = i;\r\n        }\r\n      });\r\n\r\n    if (sequenceType !== SequenceType.Parallel) {\r\n      try {\r\n        await signedTxnPromise;\r\n      } catch (e) {\r\n        console.log('Caught failure', e);\r\n        if (breakEarlyObject.breakEarly) {\r\n          console.log('Died on ', breakEarlyObject.i);\r\n          // Return the txn we failed on by index\r\n          return {\r\n            number: breakEarlyObject.i,\r\n            txs: await Promise.all(pendingTxns),\r\n          };\r\n        }\r\n      }\r\n    } else {\r\n      pendingTxns.push(signedTxnPromise);\r\n    }\r\n  }\r\n\r\n  if (sequenceType !== SequenceType.Parallel) {\r\n    await Promise.all(pendingTxns);\r\n  }\r\n\r\n  return { number: signedTxns.length, txs: await Promise.all(pendingTxns) };\r\n};\r\n\r\nexport const sendTransaction = async (\r\n  connection: Connection,\r\n  wallet: any,\r\n  instructions: TransactionInstruction[],\r\n  signers: Keypair[],\r\n  awaitConfirmation = true,\r\n  commitment: Commitment = 'singleGossip',\r\n  includesFeePayer: boolean = false,\r\n  block?: BlockhashAndFeeCalculator,\r\n) => {\r\n  if (!wallet.publicKey) throw new WalletNotConnectedError();\r\n\r\n  let transaction = new Transaction();\r\n  instructions.forEach(instruction => transaction.add(instruction));\r\n  transaction.recentBlockhash = (\r\n    block || (await connection.getRecentBlockhash(commitment))\r\n  ).blockhash;\r\n\r\n  if (includesFeePayer) {\r\n    transaction.setSigners(...signers.map(s => s.publicKey));\r\n  } else {\r\n    transaction.setSigners(\r\n      // fee payed by the wallet owner\r\n      wallet.publicKey,\r\n      ...signers.map(s => s.publicKey),\r\n    );\r\n  }\r\n\r\n  if (signers.length > 0) {\r\n    transaction.partialSign(...signers);\r\n  }\r\n  if (!includesFeePayer) {\r\n    transaction = await wallet.signTransaction(transaction);\r\n  }\r\n\r\n  const rawTransaction = transaction.serialize();\r\n  let options = {\r\n    skipPreflight: true,\r\n    commitment,\r\n  };\r\n\r\n  const txid = await connection.sendRawTransaction(rawTransaction, options);\r\n  let slot = 0;\r\n\r\n  if (awaitConfirmation) {\r\n    const confirmation = await awaitTransactionSignatureConfirmation(\r\n      txid,\r\n      DEFAULT_TIMEOUT,\r\n      connection,\r\n      commitment,\r\n    );\r\n\r\n    if (!confirmation)\r\n      throw new Error('Timed out awaiting confirmation on transaction');\r\n    slot = confirmation?.slot || 0;\r\n\r\n    if (confirmation?.err) {\r\n      const errors = await getErrorForTransaction(connection, txid);\r\n\r\n      console.log(errors);\r\n      throw new Error(`Raw transaction ${txid} failed`);\r\n    }\r\n  }\r\n\r\n  return { txid, slot };\r\n};\r\n\r\nexport const sendTransactionWithRetry = async (\r\n  connection: Connection,\r\n  wallet: any,\r\n  instructions: TransactionInstruction[],\r\n  signers: Keypair[],\r\n  commitment: Commitment = 'singleGossip',\r\n  includesFeePayer: boolean = false,\r\n  block?: BlockhashAndFeeCalculator,\r\n  beforeSend?: () => void,\r\n) => {\r\n  if (!wallet.publicKey) throw new WalletNotConnectedError();\r\n\r\n  let transaction = new Transaction();\r\n  instructions.forEach(instruction => transaction.add(instruction));\r\n  transaction.recentBlockhash = (\r\n    block || (await connection.getRecentBlockhash(commitment))\r\n  ).blockhash;\r\n\r\n  if (includesFeePayer) {\r\n    transaction.setSigners(...signers.map(s => s.publicKey));\r\n  } else {\r\n    transaction.setSigners(\r\n      // fee payed by the wallet owner\r\n      wallet.publicKey,\r\n      ...signers.map(s => s.publicKey),\r\n    );\r\n  }\r\n\r\n  if (signers.length > 0) {\r\n    transaction.partialSign(...signers);\r\n  }\r\n  if (!includesFeePayer) {\r\n    transaction = await wallet.signTransaction(transaction);\r\n  }\r\n\r\n  if (beforeSend) {\r\n    beforeSend();\r\n  }\r\n\r\n  const { txid, slot } = await sendSignedTransaction({\r\n    connection,\r\n    signedTransaction: transaction,\r\n  });\r\n\r\n  return { txid, slot };\r\n};\r\n\r\nexport const getUnixTs = () => {\r\n  return new Date().getTime() / 1000;\r\n};\r\n\r\nconst DEFAULT_TIMEOUT = 15000;\r\n\r\nexport async function sendSignedTransaction({\r\n  signedTransaction,\r\n  connection,\r\n  timeout = DEFAULT_TIMEOUT,\r\n}: {\r\n  signedTransaction: Transaction;\r\n  connection: Connection;\r\n  sendingMessage?: string;\r\n  sentMessage?: string;\r\n  successMessage?: string;\r\n  timeout?: number;\r\n}): Promise<{ txid: string; slot: number }> {\r\n  const rawTransaction = signedTransaction.serialize();\r\n  const startTime = getUnixTs();\r\n  let slot = 0;\r\n  const txid: TransactionSignature = await connection.sendRawTransaction(\r\n    rawTransaction,\r\n    {\r\n      skipPreflight: true,\r\n    },\r\n  );\r\n\r\n  console.log('Started awaiting confirmation for', txid);\r\n\r\n  let done = false;\r\n  (async () => {\r\n    while (!done && getUnixTs() - startTime < timeout) {\r\n      connection.sendRawTransaction(rawTransaction, {\r\n        skipPreflight: true,\r\n      });\r\n      await sleep(500);\r\n    }\r\n  })();\r\n  try {\r\n    const confirmation = await awaitTransactionSignatureConfirmation(\r\n      txid,\r\n      timeout,\r\n      connection,\r\n      'recent',\r\n      true,\r\n    );\r\n\r\n    if (!confirmation)\r\n      throw new Error('Timed out awaiting confirmation on transaction');\r\n\r\n    if (confirmation.err) {\r\n      console.error(confirmation.err);\r\n      throw new Error('Transaction failed: Custom instruction error');\r\n    }\r\n\r\n    slot = confirmation?.slot || 0;\r\n  } catch (err: any) {\r\n    console.error('Timeout Error caught', err);\r\n    if (err.timeout) {\r\n      throw new Error('Timed out awaiting confirmation on transaction');\r\n    }\r\n    let simulateResult: SimulatedTransactionResponse | null = null;\r\n    try {\r\n      simulateResult = (\r\n        await simulateTransaction(connection, signedTransaction, 'single')\r\n      ).value;\r\n    } catch (e) {}\r\n    if (simulateResult && simulateResult.err) {\r\n      if (simulateResult.logs) {\r\n        for (let i = simulateResult.logs.length - 1; i >= 0; --i) {\r\n          const line = simulateResult.logs[i];\r\n          if (line.startsWith('Program log: ')) {\r\n            throw new Error(\r\n              'Transaction failed: ' + line.slice('Program log: '.length),\r\n            );\r\n          }\r\n        }\r\n      }\r\n      throw new Error(JSON.stringify(simulateResult.err));\r\n    }\r\n    // throw new Error('Transaction failed');\r\n  } finally {\r\n    done = true;\r\n  }\r\n\r\n  console.log('Latency', txid, getUnixTs() - startTime);\r\n  return { txid, slot };\r\n}\r\n\r\nasync function simulateTransaction(\r\n  connection: Connection,\r\n  transaction: Transaction,\r\n  commitment: Commitment,\r\n): Promise<RpcResponseAndContext<SimulatedTransactionResponse>> {\r\n  // @ts-ignore\r\n  transaction.recentBlockhash = await connection._recentBlockhash(\r\n    // @ts-ignore\r\n    connection._disableBlockhashCaching,\r\n  );\r\n\r\n  const signData = transaction.serializeMessage();\r\n  // @ts-ignore\r\n  const wireTransaction = transaction._serialize(signData);\r\n  const encodedTransaction = wireTransaction.toString('base64');\r\n  const config: any = { encoding: 'base64', commitment };\r\n  const args = [encodedTransaction, config];\r\n\r\n  // @ts-ignore\r\n  const res = await connection._rpcRequest('simulateTransaction', args);\r\n  if (res.error) {\r\n    throw new Error('failed to simulate transaction: ' + res.error.message);\r\n  }\r\n  return res.result;\r\n}\r\n\r\nasync function awaitTransactionSignatureConfirmation(\r\n  txid: TransactionSignature,\r\n  timeout: number,\r\n  connection: Connection,\r\n  commitment: Commitment = 'recent',\r\n  queryStatus = false,\r\n): Promise<SignatureStatus | null | void> {\r\n  let done = false;\r\n  let status: SignatureStatus | null | void = {\r\n    slot: 0,\r\n    confirmations: 0,\r\n    err: null,\r\n  };\r\n  let subId = 0;\r\n  status = await new Promise(async (resolve, reject) => {\r\n    setTimeout(() => {\r\n      if (done) {\r\n        return;\r\n      }\r\n      done = true;\r\n      console.log('Rejecting for timeout...');\r\n      reject({ timeout: true });\r\n    }, timeout);\r\n    try {\r\n      subId = connection.onSignature(\r\n        txid,\r\n        (result, context) => {\r\n          done = true;\r\n          status = {\r\n            err: result.err,\r\n            slot: context.slot,\r\n            confirmations: 0,\r\n          };\r\n          if (result.err) {\r\n            console.log('Rejected via websocket', result.err);\r\n            reject(status);\r\n          } else {\r\n            console.log('Resolved via websocket', result);\r\n            resolve(status);\r\n          }\r\n        },\r\n        commitment,\r\n      );\r\n    } catch (e) {\r\n      done = true;\r\n      console.error('WS error in setup', txid, e);\r\n    }\r\n    while (!done && queryStatus) {\r\n      // eslint-disable-next-line no-loop-func\r\n      (async () => {\r\n        try {\r\n          const signatureStatuses = await connection.getSignatureStatuses([\r\n            txid,\r\n          ]);\r\n          status = signatureStatuses && signatureStatuses.value[0];\r\n          if (!done) {\r\n            if (!status) {\r\n              console.log('REST null result for', txid, status);\r\n            } else if (status.err) {\r\n              console.log('REST error for', txid, status);\r\n              done = true;\r\n              reject(status.err);\r\n            } else if (!status.confirmations) {\r\n              console.log('REST no confirmations for', txid, status);\r\n            } else {\r\n              console.log('REST confirmation for', txid, status);\r\n              done = true;\r\n              resolve(status);\r\n            }\r\n          }\r\n        } catch (e) {\r\n          if (!done) {\r\n            console.log('REST connection error: txid', txid, e);\r\n          }\r\n        }\r\n      })();\r\n      await sleep(2000);\r\n    }\r\n  });\r\n\r\n  //@ts-ignore\r\n  if (connection._signatureSubscriptions[subId])\r\n    connection.removeSignatureListener(subId);\r\n  done = true;\r\n  console.log('Returning status', status);\r\n  return status;\r\n}\r\nexport function sleep(ms: number): Promise<void> {\r\n  return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\n","import { useEffect, useMemo, useState, useCallback } from 'react';\nimport * as anchor from '@project-serum/anchor';\n\nimport styled from 'styled-components';\nimport { Container, Grid, Snackbar } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport Alert from '@material-ui/lab/Alert';\nimport { Authorized, PublicKey } from '@solana/web3.js';\nimport { useWallet } from '@solana/wallet-adapter-react';\nimport { WalletDialogButton } from '@solana/wallet-adapter-material-ui';\nimport {\n  awaitTransactionSignatureConfirmation,\n  CandyMachineAccount,\n  CANDY_MACHINE_PROGRAM,\n  getCandyMachineState,\n  mintOneToken,\n} from './candy-machine';\nimport { AlertState } from './utils';\nimport { Header } from './Header';\nimport { MintButton } from './MintButton';\nimport { GatewayProvider } from '@civic/solana-gateway-react';\nimport { isAbsolute, relative } from 'path';\nimport { translateAddress } from '@project-serum/anchor/dist/program/common';\n\nconst ConnectButton = styled(WalletDialogButton)`\n  width: 100%;\n  height: 60px;\n  margin-top: 10px;\n  margin-bottom: 5px;\n  background: linear-gradient(180deg, #604ae5 0%, #813eee 100%);\n  color: white;\n  font-size: 16px;\n  font-weight: bold;\n`;\n\nconst MintContainer = styled.div`\n  width: 100%;\n  height: 80px;\n  margin-top: 10px;\n  margin-bottom: 5px;\n  background: linear-gradient(180deg, #604ae5 0%, #813eee 100%);\n  color: white;\n  font-size: 16px;\n  font-weight: bold;\n`; // add your owns styles here\n\nexport interface HomeProps {\n  candyMachineId?: anchor.web3.PublicKey;\n  connection: anchor.web3.Connection;\n  startDate: number;\n  txTimeout: number;\n  rpcHost: string;\n}\n\nconst Home = (props: HomeProps) => {\n  const [isUserMinting, setIsUserMinting] = useState(false);\n  const [candyMachine, setCandyMachine] = useState<CandyMachineAccount>();\n  const [alertState, setAlertState] = useState<AlertState>({\n    open: false,\n    message: '',\n    severity: undefined,\n  });\n\n  const rpcUrl = props.rpcHost;\n  const wallet = useWallet();\n\n  const anchorWallet = useMemo(() => {\n    if (\n      !wallet ||\n      !wallet.publicKey ||\n      !wallet.signAllTransactions ||\n      !wallet.signTransaction\n    ) {\n      return;\n    }\n\n    return {\n      publicKey: wallet.publicKey,\n      signAllTransactions: wallet.signAllTransactions,\n      signTransaction: wallet.signTransaction,\n    } as anchor.Wallet;\n  }, [wallet]);\n\n  const refreshCandyMachineState = useCallback(async () => {\n    if (!anchorWallet) {\n      return;\n    }\n\n    if (props.candyMachineId) {\n      try {\n        const cndy = await getCandyMachineState(\n          anchorWallet,\n          props.candyMachineId,\n          props.connection,\n        );\n        setCandyMachine(cndy);\n      } catch (e) {\n        console.log('There was a problem fetching Candy Machine state');\n        console.log(e);\n      }\n    }\n  }, [anchorWallet, props.candyMachineId, props.connection]);\n\n  const onMint = async () => {\n    try {\n      setIsUserMinting(true);\n      document.getElementById('#identity')?.click();\n      if (wallet.connected && candyMachine?.program && wallet.publicKey) {\n        const mintTxId = (\n          await mintOneToken(candyMachine, wallet.publicKey)\n        )[0];\n\n        let status: any = { err: true };\n        if (mintTxId) {\n          status = await awaitTransactionSignatureConfirmation(\n            mintTxId,\n            props.txTimeout,\n            props.connection,\n            true,\n          );\n        }\n\n        if (status && !status.err) {\n          setAlertState({\n            open: true,\n            message: 'Congratulations! Mint succeeded!',\n            severity: 'success',\n          });\n        } else {\n          setAlertState({\n            open: true,\n            message: 'Mint failed! Please try again!',\n            severity: 'error',\n          });\n        }\n      }\n    } catch (error: any) {\n      let message = error.msg || 'Minting failed! Please try again!';\n      if (!error.msg) {\n        if (!error.message) {\n          message = 'Transaction Timeout! Please try again.';\n        } else if (error.message.indexOf('0x137')) {\n          message = `SOLD OUT!`;\n        } else if (error.message.indexOf('0x135')) {\n          message = `Insufficient funds to mint. Please fund your wallet.`;\n        }\n      } else {\n        if (error.code === 311) {\n          message = `SOLD OUT!`;\n          window.location.reload();\n        } else if (error.code === 312) {\n          message = `Minting period hasn't started yet.`;\n        }\n      }\n\n      setAlertState({\n        open: true,\n        message,\n        severity: 'error',\n      });\n    } finally {\n      setIsUserMinting(false);\n    }\n  };\n\n  useEffect(() => {\n    refreshCandyMachineState();\n  }, [\n    anchorWallet,\n    props.candyMachineId,\n    props.connection,\n    refreshCandyMachineState,\n  ]);\n\n  const MainDiv = styled.div`\n    width: 100%;\n    height: 100%;\n    margin: 0px;\n    overflow-x: hidden;\n  `;\n\n  const RedDiv = styled.div`\n    width: 100%;\n    height: 30rem;\n    background: #e00000;\n    position: relative;\n\n    @media (max-width: 768px) {\n      height: 20rem;\n    }\n  `;\n  const HeaderDiv = styled.div`\n    width: 100vw;\n    height: auto;\n    background: inherit;\n    padding-left: 15rem;\n    padding-top: 1.5rem;\n    margin-bottom: 0;\n    overflow-x: hidden;\n\n    @media (max-width: 1024px) {\n      padding-left: 10%;\n    }\n  `;\n\n  const HeadImg = styled('img')`\n    width: 2rem;\n    height: 3rem;\n\n    @media (max-width: 1024px) {\n      width: 1.7rem;\n      height: 2.7rem;\n    }\n  `;\n  const HeadImg2 = styled('img')`\n    width: 8rem;\n    height: 2rem;\n    padding-left: 0.8rem;\n\n    @media (max-width: 1024px) {\n      width: 7.7rem;\n      height: 1.7rem;\n    }\n  `;\n\n  const Test = styled.span`\n    color: white;\n\n    @media (max-width: 1280px) {\n      color: blue;\n    }\n    @media (max-width: 1024px) {\n      color: green;\n    }\n    @media (max-width: 992px) {\n      color: yellow;\n    }\n    @media (max-width: 768px) {\n      color: white;\n    }\n    @media (max-width: 576px) {\n      color: blue;\n    }\n    @media (max-width: 360px) {\n      color: brown;\n    }\n  `\n\n  const ImageDiv = styled.div`\n    margin-top: .4rem;\n    text-align: center;\n    overflow-x: hidden;\n    width: 100vw;\n  `;\n\n  const Img = styled.img`\n    width: 100%;\n    transition: transform 1s;\n    margin-bottom: 1rem;\n    height: 9rem;\n\n    @media (max-width: 992px) {\n      height: 8rem;\n      margin-bottom: .85rem;\n    }\n\n    @media (max-width: 768px) {\n      height: 7rem;\n      margin-bottom: .3rem;\n    }\n\n    @media (max-width: 576px) {\n      height: 6rem;\n    }\n\n    @media (max-width: 360px) {\n      height: 5rem;\n    }\n  `;\n\n  const Slide = styled.div`\n    height: 250px;\n    width: 250px;\n    display: flex;\n    align - items: center;\n    padding: 15px;\n    perspective: 100px;\n\n    @media (max-width: 768px) {\n      width: 100px;\n      height: 100px;\n    }\n    @media (max-width: 576px) {\n      width: 80px;\n      height: 80px;\n    }\n  `\n  const Slider = styled.div`\n    height: 10rem;\n    margin: auto;\n    position: relative;\n    width: 90%;\n    display: Grid;\n    place-item: center;\n\n    @media (max-width: 992px) {\n      height: 9rem;\n      margin-bottom: .71rem;\n    }\n\n    @media (max-width: 768px) {\n      height: 8rem;\n      margin-bottom: 0;\n    }\n    @media (max-width: 576px) {\n      height: 7rem;\n    }\n\n    @media (max-width: 360px) {\n      height: 6rem;\n    }\n  `\n  const SlideTrack = styled.div`\n    display: flex;\n    width: calc(250px * 28);\n    animation: scroll 40s linear infinite;\n    @media (max-width: 768px) {\n      animation: scroll1 20s linear infinite;\n    }\n    @media (max-width: 576px) {\n      animation: scroll2 10s linear infinite;\n    }\n  `\n  const SlideTracker = styled.div`\n    display: flex;\n    width: calc(250px * 28);\n    animation: scroller 40s linear infinite;\n    @media (max-width: 768px) {\n      animation: scroller1 20s linear infinite;\n    }\n    @media (max-width: 576px) {\n      animation: scroller2 10s linear infinite;\n    }\n  `\n\n  const WhiteDiv = styled.div`\n    margin-top: 11rem;\n    width: 100%;\n    height: auto;\n    text-align: center;\n\n    @media (max-width: 992px) {\n      margin-top: 9rem;\n    }\n\n    @media (max-width: 768px) {\n      margin-top: 12rem;\n    }\n\n    @media (max-width: 576px) {\n      margin-top: 8rem;\n    }\n\n    @media (max-width: 360px) {\n      margin-top: 5rem;\n    }\n  `;\n\n  const WhiteDivText = styled.p`\n    font-family: 'Futura Lt BT';\n    width: 50%;\n    font-size: 300%;\n    text-align: center;\n    margin: 0.5rem auto;\n\n    @media (max-width: 1024px) {\n      font-size: 250%;\n    }\n\n    @media (max-width: 992px) {\n      font-size: 200%;\n    }\n\n    @media (max-width: 768px) {\n      font-size: 150%;\n    }\n\n    @media (max-width: 576px) {\n      width: 80%;\n      font-size: 150%;\n    }\n  `;\n  const WhiteDivBoxWrapper = styled.div`\n    width: 100%;\n    margin: 1rem auto 4rem auto;\n  `;\n\n  const WhiteDivBox = styled.div`\n    background: #e00000;\n    padding: 0.1rem 0.5rem 2rem 0.5rem;\n    width: 30%;\n    height: auto;\n    display: inline-block;\n    margin: 1rem;\n    border-radius: 7%;\n    border: 1px solid black;\n\n    @media (max-width: 576px) {\n      display: block;\n      margin: 1rem auto;\n    }\n\n  `;\n\n  const WhiteDivBoxText = styled.p`\n    font-size: 400%;\n    font-family: 'Bradley Hand ITC';\n    color: #ffffff;\n    margin: .6rem;\n\n    @media (max-width: 1024px) {\n      font-size: 300%;\n    }\n\n    @media (max-width: 992px) {\n      font-size: 250%;\n    }\n\n    @media (max-width: 768px) {\n      font-size: 200%;\n    }\n\n    @media (max-width: 576px) {\n      font-size: 150%;\n    }\n\n  `;\n\n  const WhiteDivBoxButton = styled.button`\n    background: #ffffff;\n    padding: 0.5rem 3rem;\n    color: #e00000;\n    border-radius: 8%;\n    font-size: 300%;\n    font-weight: 600;\n    border: 1px solid white;\n\n    @media (max-width: 992px) {\n      font-size: 200%;\n      padding: 0.3rem 2rem;\n    }\n\n    @media (max-width: 576px) {\n      font-size: 200%;\n      padding: 0.2rem 1rem;\n      font-size: 150%;\n      font-weight: 500;\n    }\n  `;\n\n  const WhiteDivBoxIconsWrapper = styled.p`\n    width: 18.1%;\n    margin: 0.3rem;\n    text-align: center;\n    display: inline-block;\n\n    @media (max-width: 576px) {\n      // margin: 0;\n    }\n  `;\n\n  const WhiteDivBoxIcons = styled.img`\n    width: 53px;\n    height: 53px;\n\n    @media (max-width: 992px) {\n      width: 32px;\n      height: 32px;\n    }\n\n\n    @media (max-width: 576px) {\n      width: 24px;\n      height: 24px;\n    }\n  `;\n  const WhiteDivBoxIconsLink = styled(\"a\")`\n    cursor:pointer;\n    text-decoration: none;\n  `\n\n  const RoadmapDiv = styled.div`\n    width: 100%;\n    background: #e00000;\n    height: auto;\n    padding: 3rem 0.8rem;\n    margin-bottom: 6rem;\n    margin-top: 6rem;\n\n    @media (max-width: 768px) {\n      padding: 2rem 0;\n    }\n  `;\n\n  const RoadmapDivText = styled.p`\n    color: #ffffff;\n    font-size: 300%;\n    font-family: 'Bradley Hand ITC';\n    text-align: center;\n    text-decoration: underline;\n    margin: .6rem .6rem 1.3rem .6rem;\n\n    @media (max-width: 768px) {\n      font-size: 200%;\n    }\n\n  `;\n\n  const RoadmapOutDiv = styled.div`\n    width: 90%;\n    margin: 0.5rem auto;\n\n    @media (max-width: 768px) {\n      width: 97%;\n      margin: 0;\n    }\n\n    @media (max-width: 576px) {\n      width: 96%;\n    }\n  `;\n  const RoadmapInDiv = styled.div`\n    width: 50%;\n    display: inline-block;\n    font-size: 225%;\n    margin-bottom: 1.2rem;\n    margin-top: .1rem;\n    padding: 0;\n    font-weight: 400;\n\n    @media (max-width: 1024px) {\n      font-size: 190%;\n    }\n\n    @media (max-width: 992px) {\n      font-size: 150%;\n    }\n\n    @media (max-width: 768px) {\n      font-size: 120%;\n    }\n\n    @media (max-width: 576px) {\n      font-size: 100%;\n      display: block;\n      width: 100%;\n    }\n\n    @media (max-width: 360px) {\n      display: block;\n      width: 100%;\n    }\n  `;\n\n  const RoadmapInTextL = styled.p`\n    width: fit-content;\n    background: #ffffff;\n    color: #e00000;\n    padding: 1rem;\n    border-radius: 3%;\n    margin:0;\n\n    @media (max-width: 1024px) {\n      padding: .5rem;\n    }\n\n    @media (max-width: 576px) {\n      display: block;\n      margin: .7rem auto;\n    }\n  `;\n\n  const RoadmapInTextR = styled.p`\n    width: fit-content;\n    background: #ffffff;\n    color: #e00000;\n    float: right;\n    padding: 1rem;\n    border-radius: 3%;\n    margin:0;\n\n    @media (max-width: 1024px) {\n      padding: .5rem;\n    }\n\n    @media (max-width: 576px) {\n      float: none;\n      display: block;\n      width: fit-content;\n      margin: .7rem auto;\n    }\n  `;\n\n  const BrandDiv = styled.div`\n    width: 100%;\n    background: #e00000;\n    height: auto;\n    padding: 0.1rem 0.8rem;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    @media (max-width: 576px) {\n      display: block;\n      width: 100%;\n    }\n  `;\n  const BrandDivIn = styled.div`\n    display: inline-block;\n    width: 28%;\n    margin: 0.3rem;\n    font-size: 250%;\n    font-family: \"Bradley Hand ITC\";\n\n    @media (max-width: 1280px) {\n      font-size: 220%;\n    }\n\n    @media (max-width: 1024px) {\n      font-size: 180%;\n    }\n\n    @media (max-width: 992px) {\n      font-size: 150%;\n    }\n\n    @media (max-width: 768px) {\n      font-size: 140%;\n    }\n\n    @media (max-width: 576px) {\n      display: block;\n      width: 90%;\n      margin: .1rem 0;\n      text-align: center;\n    }\n\n  `;\n\n  const BrandDivInTwo = styled.p`\n    padding: 0.5rem 1rem;\n    text-decoration: underline;\n    display: inline-block;\n    color: white;\n  `;\n  const BrandDivInTwo2 = styled.p`\n    padding: 0.5rem 1rem;\n    display: inline-block;\n    color: white;\n  `;\n  const ProgressDiv = styled.div`\n    width: 100vw;\n    height: auto;\n    padding: 2.5rem 0.5rem 3.5rem 0.5rem;\n    background: black;\n    text-align: center;\n  `;\n\n  const ProgressBar = styled.div`\n    width: 90%;\n    height: 4.5rem;\n    padding: 0;\n    border: 2px solid white;\n    margin: 2.5rem auto;\n\n    @media (max-width: 1024px) {\n      height: 2.8rem;\n    }\n\n    @media (max-width: 768px) {\n      margin: 2.5rem 1.5rem;\n    }\n\n    @media (max-width: 576px) {\n      height: 2rem;\n      width: 92%;\n      margin: 2.5rem .3rem;\n    }\n  `;\n\n  const ProgressBarIn = styled.div`\n    width: 60%;\n    margin: 0;\n    height: inherit;\n    background: #e00000;\n  `;\n\n  const ProgressStakeBtn = styled.p`\n    background: #ffffff;\n    padding: 0.5rem 1rem;\n    color: #e00000;\n    border-radius: 8%;\n    font-size: 100%;\n    display: block;\n    width: fit-content;\n    margin: auto;\n    border: 1px solid #e00000;\n  `;\n\n  const ProgressStakeBtnRev = styled.p`\n    background: #e00000;\n    padding: 0.5rem 1rem;\n    color: #ffff;\n    border-radius: 8%;\n    font-size: 100%;\n    display: block;\n    width: fit-content;\n    margin: 1rem auto 0.5rem auto;\n    border: 1px solid #ffffff;\n  `;\n\n  const ProgImage = styled.div`\n    width: 18%;\n    margin: 0.5rem;\n    height: auto;\n    display: block;\n    float: left;\n    text-align: center;\n\n    @media (max-width: 768px) {\n      margin: .5rem 0;\n    }\n\n    @media (max-width: 576px) {\n      width: 100%;\n      margin-bottom: 2rem;\n    }\n  `;\n\n  const PImg = styled.img`\n    width: 30%;\n    height: 5rem;\n    margin-bottom: 1rem;\n\n    @media (max-width: 576px) {\n      width: 60%;\n      height: auto;\n    }\n\n    // @media (max-width: 360px) {\n    //   width: 54%;\n    //   height: 14rem;\n    // }\n  `;\n\n  const PDiv = styled.div`\n    width: 100%;\n    padding-bottom: 5.5rem;\n  `;\n\n  const ProgText = styled.div`\n    width: 38%;\n    margin: 0.5rem;\n    color: white;\n    display: inline-block;\n    text-align: left;\n\n    @media (max-width: 576px) {\n      width: 100%;\n      margin-bottom: 2rem;\n      text-align: center;\n    }\n  `;\n\n  const ProgTextP = styled.p`\n    margin: .3rem 0;\n    font-size: 187%;\n    font-family: \"Bradley Hand ITC\";\n  `\n\n  const ProgTextBtn = styled.span`\n    background: #ffffff;\n    padding: 0.5rem 1rem;\n    color: #e00000;\n    border-radius: 8%;\n    font-size: 100%;\n    display: block;\n    text-align: center;\n    width: fit-content;\n    margin-top: 1rem;\n\n    @media (max-width: 576px) {\n      margin: .1rem auto;\n    }\n  `;\n  const ProgTextLg = styled.div`\n    text-align: center;\n    margin: 0.5rem;\n    color: #ffffff;\n    font-size: 225%;\n    font-family: \"Futura Md BT\";\n\n    @media (max-width: 1024px) {\n      font-size: 200%;\n    }\n\n    @media (max-width: 992px) {\n      font-size: 180%;\n    }\n\n    @media (max-width: 768px) {\n      font-size: 160%;\n    }\n\n    @media (max-width: 576px) {\n      font-size: 130%;\n    }\n  `;\n\n  const LastBigWrapper = styled.div`\n    width: 100%;\n    padding: 4rem 1rem;\n  `;\n\n  const LastP = styled.p`\n    width: 100%;\n    text-align: center;\n    font-size: 300%;\n    font-weight: 600;\n    font-family: \"Bradley Hand ITC\";\n\n    @media (max-width: 1024px) {\n      margin: .7rem;\n    }\n\n    @media (max-width: 576px) {\n      font-size: 200%;\n      margin: .5rem;\n    }\n\n    @media (max-width: 576px) {\n      font-size: 160%;\n      margin: 0;\n    }\n  `;\n\n  const LastWrapper = styled.div`\n    width: 80%;\n    margin .1rem auto;\n\n    @media (max-width: 1024px) {\n      width: 85%;\n    }\n\n    @media (max-width: 768px) {\n      width: 94%;\n    }\n  `;\n\n  const LastDiv = styled.div`\n    width: 23%;\n    margin: 0.7rem;\n    display: inline-block;\n    text-align: center;\n\n    @media (max-width: 1280px) {\n      margin: 0.5rem;\n    }\n\n    @media (max-width: 1024px) {\n      margin: .3rem;\n    }\n\n    @media (max-width: 576px) {\n      width: 50%;\n      display: block;\n      margin: 2rem auto;\n    }\n  `;\n\n  const LastImg = styled.img`\n    width: 10rem;\n    height: 10rem;\n    border-radius: 50%;\n\n    @media (max-width: 768px) {\n      width: 7rem;\n      height: 7rem;\n    }\n  `;\n\n  const Lasth6 = styled.h6`\n    font-size: 1.5rem;\n    font-weight: 600;\n    font-family: \"Bradley Hand ITC\";\n    margin: .6rem;\n\n    @media (max-width: 768px) {\n      margin: .4rem;\n    }\n  `;\n\n  const LastImgText = styled.p`\n    font-family: \"Futura Lt BT\";\n  `;\n\n  return (\n    <div>\n      {!wallet.connected ? (\n        <>\n          <MainDiv>\n            <RedDiv>\n              <HeaderDiv>\n                <HeadImg src=\"/1217.png\" alt=\"CloneX image header\"></HeadImg>\n                <HeadImg2 src=\"/CloneXtext.png\" alt=\"CloneX image\"></HeadImg2>\n                {/* <Test>Testing this</Test> */}\n              </HeaderDiv>\n              <ImageDiv>\n                <Slider className=\"slider\">\n                  <SlideTrack className=\"slide-track\">\n                    <Slide>\n                      <Img className=\"img\" src=\"/1216.png\" alt=\"CloneX image 1\"></Img>\n                    </Slide>\n                    <Slide><Img className=\"img\" src=\"/12171.png\" alt=\"CloneX image 2\"></Img></Slide>\n                    <Slide><Img className=\"img\" src=\"/1218.png\" alt=\"CloneX image 3\"></Img></Slide>\n                    <Slide><Img className=\"img\" src=\"/1219.png\" alt=\"CloneX image 4\"></Img></Slide>\n                    <Slide><Img className=\"img\" src=\"/1220.png\" alt=\"CloneX image 5\"></Img></Slide>\n                    <Slide><Img className=\"img\" src=\"/1226.png\" alt=\"CloneX image 6\"></Img></Slide>\n                    <Slide><Img className=\"img\" src=\"/1227.png\" alt=\"CloneX image 7\"></Img></Slide>\n                    <Slide><Img className=\"img\" src=\"/1228.png\" alt=\"CloneX image 8\"></Img></Slide>\n                    <Slide><Img className=\"img\" src=\"/1229.png\" alt=\"CloneX image 9\"></Img></Slide>\n                    <Slide><Img className=\"img\" src=\"/1230.png\" alt=\"CloneX image 10\"></Img></Slide>\n                    <Slide><Img className=\"img\" src=\"/1236.png\" alt=\"CloneX image 11\"></Img></Slide>\n                    <Slide><Img className=\"img\" src=\"/1237.png\" alt=\"CloneX image 12\"></Img></Slide>\n                    <Slide><Img className=\"img\" src=\"/1238.png\" alt=\"CloneX image 13\"></Img></Slide>\n                    <Slide><Img className=\"img\" src=\"/1239.png\" alt=\"CloneX image 14\"></Img></Slide>\n                    <Slide>\n                      <Img className=\"img\" src=\"/1216.png\" alt=\"CloneX image 1\"></Img>\n                    </Slide>\n                    <Slide><Img className=\"img\" src=\"/12171.png\" alt=\"CloneX image 2\"></Img></Slide>\n                    <Slide><Img className=\"img\" src=\"/1218.png\" alt=\"CloneX image 3\"></Img></Slide>\n                    <Slide><Img className=\"img\" src=\"/1219.png\" alt=\"CloneX image 4\"></Img></Slide>\n                    <Slide><Img className=\"img\" src=\"/1220.png\" alt=\"CloneX image 5\"></Img></Slide>\n                    <Slide><Img className=\"img\" src=\"/1226.png\" alt=\"CloneX image 6\"></Img></Slide>\n                    <Slide><Img className=\"img\" src=\"/1227.png\" alt=\"CloneX image 7\"></Img></Slide>\n                    <Slide><Img className=\"img\" src=\"/1228.png\" alt=\"CloneX image 8\"></Img></Slide>\n                    <Slide><Img className=\"img\" src=\"/1229.png\" alt=\"CloneX image 9\"></Img></Slide>\n                    <Slide><Img className=\"img\" src=\"/1230.png\" alt=\"CloneX image 10\"></Img></Slide>\n                    <Slide><Img className=\"img\" src=\"/1236.png\" alt=\"CloneX image 11\"></Img></Slide>\n                    <Slide><Img className=\"img\" src=\"/1237.png\" alt=\"CloneX image 12\"></Img></Slide>\n                    <Slide><Img className=\"img\" src=\"/1238.png\" alt=\"CloneX image 13\"></Img></Slide>\n                    <Slide><Img className=\"img\" src=\"/1239.png\" alt=\"CloneX image 14\"></Img></Slide>\n                  </SlideTrack>\n                </Slider>\n                <Slider className=\"slider\">\n                  <SlideTracker className=\"slide-track\">\n                    <Slide>\n                      <Img className=\"img\" src=\"/1216.png\" alt=\"CloneX image 1\"></Img>\n                    </Slide>\n                    <Slide><Img className=\"img\" src=\"/12171.png\" alt=\"CloneX image 2\"></Img></Slide>\n                    <Slide><Img className=\"img\" src=\"/1218.png\" alt=\"CloneX image 3\"></Img></Slide>\n                    <Slide><Img className=\"img\" src=\"/1219.png\" alt=\"CloneX image 4\"></Img></Slide>\n                    <Slide><Img className=\"img\" src=\"/1220.png\" alt=\"CloneX image 5\"></Img></Slide>\n                    <Slide><Img className=\"img\" src=\"/1226.png\" alt=\"CloneX image 6\"></Img></Slide>\n                    <Slide><Img className=\"img\" src=\"/1227.png\" alt=\"CloneX image 7\"></Img></Slide>\n                    <Slide><Img className=\"img\" src=\"/1228.png\" alt=\"CloneX image 8\"></Img></Slide>\n                    <Slide><Img className=\"img\" src=\"/1229.png\" alt=\"CloneX image 9\"></Img></Slide>\n                    <Slide><Img className=\"img\" src=\"/1230.png\" alt=\"CloneX image 10\"></Img></Slide>\n                    <Slide><Img className=\"img\" src=\"/1236.png\" alt=\"CloneX image 11\"></Img></Slide>\n                    <Slide><Img className=\"img\" src=\"/1237.png\" alt=\"CloneX image 12\"></Img></Slide>\n                    <Slide><Img className=\"img\" src=\"/1238.png\" alt=\"CloneX image 13\"></Img></Slide>\n                    <Slide><Img className=\"img\" src=\"/1239.png\" alt=\"CloneX image 14\"></Img></Slide>\n                    <Slide>\n                      <Img className=\"img\" src=\"/1216.png\" alt=\"CloneX image 1\"></Img>\n                    </Slide>\n                    <Slide><Img className=\"img\" src=\"/12171.png\" alt=\"CloneX image 2\"></Img></Slide>\n                    <Slide><Img className=\"img\" src=\"/1218.png\" alt=\"CloneX image 3\"></Img></Slide>\n                    <Slide><Img className=\"img\" src=\"/1219.png\" alt=\"CloneX image 4\"></Img></Slide>\n                    <Slide><Img className=\"img\" src=\"/1220.png\" alt=\"CloneX image 5\"></Img></Slide>\n                    <Slide><Img className=\"img\" src=\"/1226.png\" alt=\"CloneX image 6\"></Img></Slide>\n                    <Slide><Img className=\"img\" src=\"/1227.png\" alt=\"CloneX image 7\"></Img></Slide>\n                    <Slide><Img className=\"img\" src=\"/1228.png\" alt=\"CloneX image 8\"></Img></Slide>\n                    <Slide><Img className=\"img\" src=\"/1229.png\" alt=\"CloneX image 9\"></Img></Slide>\n                    <Slide><Img className=\"img\" src=\"/1230.png\" alt=\"CloneX image 10\"></Img></Slide>\n                    <Slide><Img className=\"img\" src=\"/1236.png\" alt=\"CloneX image 11\"></Img></Slide>\n                    <Slide><Img className=\"img\" src=\"/1237.png\" alt=\"CloneX image 12\"></Img></Slide>\n                    <Slide><Img className=\"img\" src=\"/1238.png\" alt=\"CloneX image 13\"></Img></Slide>\n                    <Slide><Img className=\"img\" src=\"/1239.png\" alt=\"CloneX image 14\"></Img></Slide>\n                  </SlideTracker>\n                </Slider>\n                <Slider className=\"slider\">\n                  <SlideTrack className=\"slide-track\">\n                    <Slide>\n                      <Img className=\"img\" src=\"/1216.png\" alt=\"CloneX image 1\"></Img>\n                    </Slide>\n                    <Slide><Img className=\"img\" src=\"/12171.png\" alt=\"CloneX image 2\"></Img></Slide>\n                    <Slide><Img className=\"img\" src=\"/1218.png\" alt=\"CloneX image 3\"></Img></Slide>\n                    <Slide><Img className=\"img\" src=\"/1219.png\" alt=\"CloneX image 4\"></Img></Slide>\n                    <Slide><Img className=\"img\" src=\"/1220.png\" alt=\"CloneX image 5\"></Img></Slide>\n                    <Slide><Img className=\"img\" src=\"/1226.png\" alt=\"CloneX image 6\"></Img></Slide>\n                    <Slide><Img className=\"img\" src=\"/1227.png\" alt=\"CloneX image 7\"></Img></Slide>\n                    <Slide><Img className=\"img\" src=\"/1228.png\" alt=\"CloneX image 8\"></Img></Slide>\n                    <Slide><Img className=\"img\" src=\"/1229.png\" alt=\"CloneX image 9\"></Img></Slide>\n                    <Slide><Img className=\"img\" src=\"/1230.png\" alt=\"CloneX image 10\"></Img></Slide>\n                    <Slide><Img className=\"img\" src=\"/1236.png\" alt=\"CloneX image 11\"></Img></Slide>\n                    <Slide><Img className=\"img\" src=\"/1237.png\" alt=\"CloneX image 12\"></Img></Slide>\n                    <Slide><Img className=\"img\" src=\"/1238.png\" alt=\"CloneX image 13\"></Img></Slide>\n                    <Slide><Img className=\"img\" src=\"/1239.png\" alt=\"CloneX image 14\"></Img></Slide>\n                    <Slide>\n                      <Img className=\"img\" src=\"/1216.png\" alt=\"CloneX image 1\"></Img>\n                    </Slide>\n                    <Slide><Img className=\"img\" src=\"/12171.png\" alt=\"CloneX image 2\"></Img></Slide>\n                    <Slide><Img className=\"img\" src=\"/1218.png\" alt=\"CloneX image 3\"></Img></Slide>\n                    <Slide><Img className=\"img\" src=\"/1219.png\" alt=\"CloneX image 4\"></Img></Slide>\n                    <Slide><Img className=\"img\" src=\"/1220.png\" alt=\"CloneX image 5\"></Img></Slide>\n                    <Slide><Img className=\"img\" src=\"/1226.png\" alt=\"CloneX image 6\"></Img></Slide>\n                    <Slide><Img className=\"img\" src=\"/1227.png\" alt=\"CloneX image 7\"></Img></Slide>\n                    <Slide><Img className=\"img\" src=\"/1228.png\" alt=\"CloneX image 8\"></Img></Slide>\n                    <Slide><Img className=\"img\" src=\"/1229.png\" alt=\"CloneX image 9\"></Img></Slide>\n                    <Slide><Img className=\"img\" src=\"/1230.png\" alt=\"CloneX image 10\"></Img></Slide>\n                    <Slide><Img className=\"img\" src=\"/1236.png\" alt=\"CloneX image 11\"></Img></Slide>\n                    <Slide><Img className=\"img\" src=\"/1237.png\" alt=\"CloneX image 12\"></Img></Slide>\n                    <Slide><Img className=\"img\" src=\"/1238.png\" alt=\"CloneX image 13\"></Img></Slide>\n                    <Slide><Img className=\"img\" src=\"/1239.png\" alt=\"CloneX image 14\"></Img></Slide>\n                  </SlideTrack>\n                </Slider>\n              </ImageDiv>\n            </RedDiv>\n            <WhiteDiv>\n              <WhiteDivText>\n                A deviant faction of 3000 Clone X on the Solana blockchain. All\n                Solana based CXC are not affiliated with the original Clone X\n                series on ethereum.\n              </WhiteDivText>\n              <WhiteDivBoxWrapper>\n                <WhiteDivBox>\n                  <WhiteDivBoxText>3000 CloneX</WhiteDivBoxText>\n                  <WhiteDivBoxButton>TBA</WhiteDivBoxButton>\n                </WhiteDivBox>\n                <WhiteDivBox style={{paddingBottom: \"2.5rem\"}}>\n                  <WhiteDivBoxText>JOIN US</WhiteDivBoxText>\n                  <WhiteDivBoxIconsWrapper>\n                    <WhiteDivBoxIconsLink\n                      href=\"https://discord.gg/W2NK8uK8aw\"\n                      target=\"_blank\"\n                      rel=\"noreferrer\"\n                    >\n                      <WhiteDivBoxIcons\n                        src=\"/discord4.png\"\n                        alt=\"discord\"\n                      >\n                      </WhiteDivBoxIcons>\n                    </WhiteDivBoxIconsLink>\n                  </WhiteDivBoxIconsWrapper>\n                  <WhiteDivBoxIconsWrapper>\n                    <WhiteDivBoxIconsLink\n                      href=\"https://twitter.com/dclonexcopy\"\n                      target=\"_blank\"\n                      rel=\"noreferrer\"\n                    >\n                      <WhiteDivBoxIcons\n                      src=\"/twitter.png\"\n                      alt=\"twitter\"\n                    ></WhiteDivBoxIcons>\n                    </WhiteDivBoxIconsLink>\n                  </WhiteDivBoxIconsWrapper>\n                  {/* <WhiteDivBoxIconsWrapper>\n                    <WhiteDivBoxIcons\n                      src=\"/insta.png\"\n                      alt=\"insta\"\n                    ></WhiteDivBoxIcons>\n                  </WhiteDivBoxIconsWrapper> */}\n                </WhiteDivBox>\n              </WhiteDivBoxWrapper>\n              <WhiteDivText>\n                A group of CloneX rebelled against the Federation in the\n                Ethereum metaverse and found themselves engaged in a fierce\n                battle for control of the government. The war lasted 30 days and\n                30 nights, shaking the heavens and renting the night sky with\n                thunder and lightning. On the 30th day, the CXC were cast out of\n                ethereum and fell from the skies to Solana like angels from\n                heaven. Now on Solan, the CXC have to rebuild their civilization\n                and grow their population on this new found universe. Will you\n                help them find their new home?\n              </WhiteDivText>\n            </WhiteDiv>\n            <RoadmapDiv>\n              <RoadmapDivText>ROADMAP</RoadmapDivText>\n              <RoadmapOutDiv>\n                <RoadmapInDiv>\n                  <RoadmapInTextL>1. Stealth Launch NFT</RoadmapInTextL>\n                </RoadmapInDiv>\n                <RoadmapInDiv>\n                  <RoadmapInTextL>\n                    2. NFT and Discord Verification\n                  </RoadmapInTextL>\n                </RoadmapInDiv>\n                <RoadmapInDiv>\n                  <RoadmapInTextR>3. Magic Eden Listing</RoadmapInTextR>\n                </RoadmapInDiv>\n                <RoadmapInDiv>\n                  <RoadmapInTextR>4. Staking to earn $CXK</RoadmapInTextR>\n                </RoadmapInDiv>\n                <RoadmapInDiv>\n                  <RoadmapInTextL>5. CXC Breeding Launch</RoadmapInTextL>\n                </RoadmapInDiv>\n                <RoadmapInDiv>\n                  <RoadmapInTextL>6. CXC Marketplace Launch</RoadmapInTextL>\n                </RoadmapInDiv>\n              </RoadmapOutDiv>\n            </RoadmapDiv>\n            <BrandDiv>\n              <BrandDivIn>\n                <HeadImg src=\"/1217.png\" alt=\"CloneX image header\"></HeadImg>\n                <HeadImg2 src=\"/CloneXtext.png\" alt=\"CloneX image\"></HeadImg2>\n              </BrandDivIn>\n              <BrandDivIn>\n                <BrandDivInTwo>Stake</BrandDivInTwo>\n                <BrandDivInTwo2>Breed</BrandDivInTwo2>\n              </BrandDivIn>\n              <BrandDivIn>XS34...D31F connected</BrandDivIn>\n            </BrandDiv>\n            <ProgressDiv>\n              <ProgTextLg>2900/3000 Clone X Copy Staked</ProgTextLg>\n              <ProgressBar>\n                <ProgressBarIn></ProgressBarIn>\n              </ProgressBar>\n              <PDiv>\n                <ProgImage>\n                  <PImg src=\"/1242.png\" alt=\"p image\"></PImg>\n                  <ProgressStakeBtn>Unstake</ProgressStakeBtn>\n                </ProgImage>\n                <ProgImage>\n                  <PImg\n                    src=\"/1243.png\"\n                    alt=\"p image\"\n                  ></PImg>\n                  <ProgressStakeBtn>Unstake</ProgressStakeBtn>\n                  <ProgressStakeBtnRev>Stake CXK</ProgressStakeBtnRev>\n                </ProgImage>\n                <ProgImage>\n                  <PImg src=\"/1244.png\" alt=\"p image\"></PImg>\n                  <ProgressStakeBtn>Unstake</ProgressStakeBtn>\n                </ProgImage>\n                <ProgText>\n                  <ProgTextP>100 $CXK Daily</ProgTextP>\n                  <ProgTextP><span style={{\n                    color: \"#E00000\"\n                  }}>700 </span>$CXK Earned</ProgTextP>\n                  <ProgTextBtn>Claim $CXK</ProgTextBtn>\n                </ProgText>\n              </PDiv>\n            </ProgressDiv>\n            <LastBigWrapper>\n              <LastP>Meet The Rebel Leaders</LastP>\n              <LastWrapper>\n                <LastDiv>\n                  <LastImg src=\"/1222.png\" alt=\"avatar\"></LastImg>\n                  <Lasth6>Mufasa</Lasth6>\n                  <LastImgText>\n                    Degen NFT collector, NFT trader and market specialist\n                    moonlighting as fintech analyst\n                  </LastImgText>\n                </LastDiv>\n                <LastDiv>\n                  <LastImg src=\"/1223.png\" alt=\"avatar\"></LastImg>\n                  <Lasth6>Sharon</Lasth6>\n                  <LastImgText>\n                    Full-stack Python engineer and blockchain architect. Degen\n                    Punk holder and black activist\n                  </LastImgText>\n                </LastDiv>\n                <LastDiv>\n                  <LastImg src=\"/1233.png\" alt=\"avatar\"></LastImg>\n                  <Lasth6>Bush</Lasth6>\n                  <LastImgText>\n                    Marketing manager and Operations specialist. Shorted\n                    ethereum from $130 to $80\n                  </LastImgText>\n                </LastDiv>\n                <LastDiv>\n                  <LastImg src=\"/1232.png\" alt=\"avatar\"></LastImg>\n                  <Lasth6>Pandore</Lasth6>\n                  <LastImgText>\n                    Designer and NFT artist. Illustrated NFT for 2 out of top 10\n                    7 figure NFTs on ethereum\n                  </LastImgText>\n                </LastDiv>\n              </LastWrapper>\n            </LastBigWrapper>\n          </MainDiv>\n        </>\n      ) : (\n        <>\n          <div>testing</div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Home;\n","import './App.css';\r\nimport { useMemo } from 'react';\r\nimport * as anchor from '@project-serum/anchor';\r\nimport Home from './Home';\r\n\r\nimport { clusterApiUrl } from '@solana/web3.js';\r\nimport { WalletAdapterNetwork } from '@solana/wallet-adapter-base';\r\nimport {\r\n  getPhantomWallet,\r\n  getSlopeWallet,\r\n  getSolflareWallet,\r\n  getSolletWallet,\r\n  getSolletExtensionWallet,\r\n} from '@solana/wallet-adapter-wallets';\r\n\r\nimport {\r\n  ConnectionProvider,\r\n  WalletProvider,\r\n} from '@solana/wallet-adapter-react';\r\nimport { WalletDialogProvider } from '@solana/wallet-adapter-material-ui';\r\n\r\nimport { ThemeProvider, createTheme } from '@material-ui/core';\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    type: 'dark',\r\n  },\r\n});\r\n\r\nconst getCandyMachineId = (): anchor.web3.PublicKey | undefined => {\r\n  try {\r\n    const candyMachineId = new anchor.web3.PublicKey(\r\n      process.env.REACT_APP_CANDY_MACHINE_ID!,\r\n    );\r\n\r\n    return candyMachineId;\r\n  } catch (e) {\r\n    console.log('Failed to construct CandyMachineId', e);\r\n    return undefined;\r\n  }\r\n};\r\n\r\nconst candyMachineId = getCandyMachineId();\r\nconst network = process.env.REACT_APP_SOLANA_NETWORK as WalletAdapterNetwork;\r\nconst rpcHost = process.env.REACT_APP_SOLANA_RPC_HOST!;\r\nconst connection = new anchor.web3.Connection(rpcHost\r\n  ? rpcHost\r\n  : anchor.web3.clusterApiUrl('devnet'));\r\n\r\nconst startDateSeed = parseInt(process.env.REACT_APP_CANDY_START_DATE!, 10);\r\nconst txTimeoutInMilliseconds = 30000;\r\n\r\nconst App = () => {\r\n  const endpoint = useMemo(() => clusterApiUrl(network), []);\r\n\r\n  const wallets = useMemo(\r\n    () => [\r\n      getPhantomWallet(),\r\n      getSolflareWallet(),\r\n      getSlopeWallet(),\r\n      getSolletWallet({ network }),\r\n      getSolletExtensionWallet({ network }),\r\n    ],\r\n    [],\r\n  );\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <ConnectionProvider endpoint={endpoint}>\r\n        <WalletProvider wallets={wallets} autoConnect>\r\n          <WalletDialogProvider>\r\n            <Home\r\n              candyMachineId={candyMachineId}\r\n              connection={connection}\r\n              startDate={startDateSeed}\r\n              txTimeout={txTimeoutInMilliseconds}\r\n              rpcHost={rpcHost}\r\n            />\r\n          </WalletDialogProvider>\r\n        </WalletProvider>\r\n      </ConnectionProvider>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import * as anchor from '@project-serum/anchor';\r\nimport { TOKEN_PROGRAM_ID } from '@solana/spl-token';\r\nimport { SystemProgram } from '@solana/web3.js';\r\nimport {\r\n  LAMPORTS_PER_SOL,\r\n  SYSVAR_RENT_PUBKEY,\r\n  TransactionInstruction,\r\n} from '@solana/web3.js';\r\n\r\nexport interface AlertState {\r\n  open: boolean;\r\n  message: string;\r\n  severity: 'success' | 'info' | 'warning' | 'error' | undefined;\r\n}\r\n\r\nexport const toDate = (value?: anchor.BN) => {\r\n  if (!value) {\r\n    return;\r\n  }\r\n\r\n  return new Date(value.toNumber() * 1000);\r\n};\r\n\r\nconst numberFormater = new Intl.NumberFormat('en-US', {\r\n  style: 'decimal',\r\n  minimumFractionDigits: 2,\r\n  maximumFractionDigits: 2,\r\n});\r\n\r\nexport const formatNumber = {\r\n  format: (val?: number) => {\r\n    if (!val) {\r\n      return '--';\r\n    }\r\n\r\n    return numberFormater.format(val);\r\n  },\r\n  asNumber: (val?: anchor.BN) => {\r\n    if (!val) {\r\n      return undefined;\r\n    }\r\n\r\n    return val.toNumber() / LAMPORTS_PER_SOL;\r\n  },\r\n};\r\n\r\nexport const SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID =\r\n  new anchor.web3.PublicKey('ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL');\r\n\r\nexport const CIVIC = new anchor.web3.PublicKey(\r\n  'gatem74V238djXdzWnJf94Wo1DcnuGkfijbf3AuBhfs',\r\n);\r\n\r\nexport const getAtaForMint = async (\r\n  mint: anchor.web3.PublicKey,\r\n  buyer: anchor.web3.PublicKey,\r\n): Promise<[anchor.web3.PublicKey, number]> => {\r\n  return await anchor.web3.PublicKey.findProgramAddress(\r\n    [buyer.toBuffer(), TOKEN_PROGRAM_ID.toBuffer(), mint.toBuffer()],\r\n    SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID,\r\n  );\r\n};\r\n\r\nexport const getNetworkExpire = async (\r\n  gatekeeperNetwork: anchor.web3.PublicKey,\r\n): Promise<[anchor.web3.PublicKey, number]> => {\r\n  return await anchor.web3.PublicKey.findProgramAddress(\r\n    [gatekeeperNetwork.toBuffer(), Buffer.from('expire')],\r\n    CIVIC,\r\n  );\r\n};\r\n\r\nexport const getNetworkToken = async (\r\n  wallet: anchor.web3.PublicKey,\r\n  gatekeeperNetwork: anchor.web3.PublicKey,\r\n): Promise<[anchor.web3.PublicKey, number]> => {\r\n  return await anchor.web3.PublicKey.findProgramAddress(\r\n    [\r\n      wallet.toBuffer(),\r\n      Buffer.from('gateway'),\r\n      Buffer.from([0, 0, 0, 0, 0, 0, 0, 0]),\r\n      gatekeeperNetwork.toBuffer(),\r\n    ],\r\n    CIVIC,\r\n  );\r\n};\r\n\r\nexport function createAssociatedTokenAccountInstruction(\r\n  associatedTokenAddress: anchor.web3.PublicKey,\r\n  payer: anchor.web3.PublicKey,\r\n  walletAddress: anchor.web3.PublicKey,\r\n  splTokenMintAddress: anchor.web3.PublicKey,\r\n) {\r\n  const keys = [\r\n    {\r\n      pubkey: payer,\r\n      isSigner: true,\r\n      isWritable: true,\r\n    },\r\n    {\r\n      pubkey: associatedTokenAddress,\r\n      isSigner: false,\r\n      isWritable: true,\r\n    },\r\n    {\r\n      pubkey: walletAddress,\r\n      isSigner: false,\r\n      isWritable: false,\r\n    },\r\n    {\r\n      pubkey: splTokenMintAddress,\r\n      isSigner: false,\r\n      isWritable: false,\r\n    },\r\n    {\r\n      pubkey: SystemProgram.programId,\r\n      isSigner: false,\r\n      isWritable: false,\r\n    },\r\n    {\r\n      pubkey: TOKEN_PROGRAM_ID,\r\n      isSigner: false,\r\n      isWritable: false,\r\n    },\r\n    {\r\n      pubkey: SYSVAR_RENT_PUBKEY,\r\n      isSigner: false,\r\n      isWritable: false,\r\n    },\r\n  ];\r\n  return new TransactionInstruction({\r\n    keys,\r\n    programId: SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID,\r\n    data: Buffer.from([]),\r\n  });\r\n}\r\n"],"sourceRoot":""}